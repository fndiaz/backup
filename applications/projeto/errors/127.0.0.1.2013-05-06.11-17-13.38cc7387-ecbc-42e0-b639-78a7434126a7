(dp1
S'output'
p2
S'<class \'_mysql_exceptions.OperationalError\'> (1050, "Table \'agenda\' already exists")'
p3
sS'layer'
p4
S'/var/www/agenda/applications/projeto/models/models.py'
p5
sS'code'
p6
S'agenda = db.define_table("agenda",\n      Field("empresa", notnull=True),\n      Field("telefone", notnull=True, unique=True),\n      Field("contato"),\n      Field("dep"),\n      #auth.signature\n      format="%(nome)s")\n\n\n\n\n\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/var/www/agenda/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/var/www/agenda/applications/projeto/models/models.py", line 7, in <module>\n    format="%(nome)s")\n  File "/var/www/agenda/gluon/dal.py", line 7186, in define_table\n    table = self.lazy_define_table(tablename,*fields,**args)\n  File "/var/www/agenda/gluon/dal.py", line 7222, in lazy_define_table\n    polymodel=polymodel)\n  File "/var/www/agenda/gluon/dal.py", line 935, in create_table\n    self.create_sequence_and_triggers(query,table)\n  File "/var/www/agenda/gluon/dal.py", line 1694, in create_sequence_and_triggers\n    self.execute(query)\n  File "/var/www/agenda/gluon/dal.py", line 1709, in execute\n    return self.log_execute(*a, **b)\n  File "/var/www/agenda/gluon/dal.py", line 1703, in log_execute\n    ret = self.cursor.execute(*a, **b)\n  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 174, in execute\n    self.errorhandler(self, exc, value)\n  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler\n    raise errorclass, errorvalue\nOperationalError: (1050, "Table \'agenda\' already exists")\n'
p11
s.